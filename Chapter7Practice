import java.util.Arrays;

public class Chapter7Practice {

	public static void main(String[] args) {
		int[] list1 = new int[] {5, 2, 4, 17, 55, 4, 3, 26, 18, 2, 17};
		System.out.println((median(list1)));
	}
	
	public static double stdev(int[] a) {
		double average = 0.0;
	    double sum = 0.0;
	    double result = 0.0;
	    
	    for(int i=0; i<a.length; i++) {
	        average += a[i];
	    }
	    average = average/a.length;
	    
	    for(int i=0; i<a.length; i++) {
	    	sum += Math.pow(a[i]-average, 2);
	    }
	    
	    result = sum/(a.length-1);
	    
	    return result = Math.sqrt(result);
	    
	}
	
	public static int median(int[] a) {
		Arrays.sort(a);
		int[] spareArray = new int[100];
		
		for(int i = 0; i <a.length; i++) {
			spareArray[a[i]]++;
		}
		
		int sum = 0;
		for(int i = 0; i < spareArray.length; i++) {
			sum += spareArray[i];
			if(sum == a.length / 2 + 1) {
				return i;
			}
		}
		return -1;
	}
	
	public static boolean contains(int[] a1, int[] a2) {
		for(int i = 0; i <= a1.length-a2.length; i++) {
			int count = 0;
			
			for(int j = 0; j < a2.length; j++) {
				if (a2[j] == a1[i + j]) {
					count++;
				}
			}
			if (count == a2.length) {
				return true;
			}
		}
		return false;
	}
	
	public static int[] append(int[] list1, int[] list2) {
		int[] list3 = new int[list1.length+list2.length];
		int value = 0;
		
		for(int i = 0; i < list1.length; i++) {
			list3[value] = list1[i];
			value++;
		}
		
		for(int i = 0; i < list2.length; i++) {
			list3[value] = list2[i];
			value++;
		}
		return list3;
	}
	
	public static int lastIndexOf(int[] a, int target) {
		int i = 0;
		for(i = a.length - 1; i >= 0; i--) {
			if(a[i] == target) {
				return i;
			}
		}
		return -1;
	}
	
	public static int countInRange(int[] a, int min, int max) {
		int count = 0;
		for(int i = 0; i < a.length; i++) {
			if(a[i] >= min && a[i] <= max) {
				count++;
			}
		}
		return count;
	}
}
