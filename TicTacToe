import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Polygon;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class TicTacToe {
	static DrawingPanel board;
	static Graphics g;
	static ArrayList<Integer> P1;
	static ArrayList<Integer> P2;
	static ArrayList<Integer> P3;
	static Scanner scan;
	static String finalResult;
	static boolean full;
	
	public static void main(String[] args) {
		gameBoard();
		Font font = new Font("TimesRoman", Font.BOLD | Font.ITALIC, 30);
		g.setFont(font);
		P1 = new ArrayList<>();
		P2 = new ArrayList<>();
		P3 = new ArrayList<>();
		
		while(true) {
			scan = new Scanner(System.in);
			System.out.println("Input a number between 1-9:");
			int pos = scan.nextInt();
			center(pos, 1);
			checkWin(P1);
			
			if(finalResult != "O" && full == false) {
				Random rand = new Random();
				int cpuPos = rand.nextInt(9) + 1;
				center(cpuPos, 2);
				checkWin(P2);
			}
		}
	}
	
	public static void winningCondition(int position, int player) {
		if(player == 1) {
			P1.add(position);
			P3.add(position);
		} else if(player == 2) {
			P2.add(position);
			P3.add(position);
		}		
	}
	
	public static void checkWin(ArrayList<Integer> p) {
		g.setColor(new Color(255, 0, 0));
		if(p.contains(1) && p.contains(2) && p.contains(3)) {
			g.drawLine(120, 150, 380, 150);
			checkWinner(p);
		} else if(p.contains(4) && p.contains(5) && p.contains(6)) {
			g.drawLine(120, 250, 380, 250);
			checkWinner(p);
		} else if(p.contains(7) && p.contains(8) && p.contains(9)) {
			g.drawLine(120, 350, 380, 350);
			checkWinner(p);
		} else if(p.contains(1) && p.contains(4) && p.contains(7)) {
			g.drawLine(150, 120, 150, 380);
			checkWinner(p);
		} else if(p.contains(2) && p.contains(5) && p.contains(8)) {
			g.drawLine(250, 120, 250, 380);
			checkWinner(p);
		} else if(p.contains(3) && p.contains(6) && p.contains(9)) {
			g.drawLine(350, 120, 350, 380);
			checkWinner(p);
		} else if(p.contains(1) && p.contains(5) && p.contains(9)) {
			g.drawLine(120, 120, 380, 380);
			checkWinner(p);
		} else if(p.contains(3) && p.contains(5) && p.contains(7)) {
			g.drawLine(380, 120, 120, 380);
			checkWinner(p);
		} else if(P3.contains(1) && P3.contains(2) && P3.contains(3) 
				&& P3.contains(4) && P3.contains(5) && P3.contains(6) 
				&& P3.contains(7) && P3.contains(8) && P3.contains(9)) {
			g.drawString("Tied!", 220, 50);
			full = true;
		}
	}
	
	public static void gameBoard() {
		board = new DrawingPanel(500, 500);
		g = board.getGraphics();
		
		Color c = new Color(0, 163, 244);
		board.setBackground(c);
		
		for(int i=1; i<=3; i++) {
			for(int j=1; j<=3; j++) {
				g.drawRect(100*i, 100*j, 100, 100);
			}
		}
		g.setColor(new Color(12, 44, 86));
		g.drawString("Enter numbers between 1-9 in the console to play!", 102, 90);
		g.setColor(new Color(39, 37, 21));
		g.drawString("1", 101, 111);
		g.drawString("2", 201, 111);
		g.drawString("3", 301, 111);
		g.drawString("4", 101, 211);
		g.drawString("5", 201, 211);
		g.drawString("6", 301, 211);
		g.drawString("7", 101, 311);
		g.drawString("8", 201, 311);
		g.drawString("9", 301, 311);
	}
	
	public static void center(int center, int player) {
		Color a = new Color(196, 206, 212);
		Color b = new Color(12,35,64);
		Color c = new Color(0, 163, 244);
		
		if(center > 9 || center < 1) {
			System.out.println("Wrong number! Try again:");
			int pos = scan.nextInt();
			center(pos, 1);
		} else {
			if(P1.contains(center) || P2.contains(center)) {
				if(player == 1) {
					System.out.println("Sorry, Position Taken.");
					System.out.println("Try Another Move:");
					int pos = scan.nextInt();
					center(pos, 1);
				} else {
					Random rand = new Random();
					int cpuPos = rand.nextInt(9) + 1;
					center(cpuPos, 2);
				}
			} else {
				if(player == 1) {
					g.setColor(b);
					if(center == 1) {
						g.fillOval(125, 125, 50, 50);
						g.setColor(c);
						g.fillOval(135, 135, 30, 30);
						winningCondition(1, 1);
					} else if(center == 2) {
						g.fillOval(225, 125, 50, 50);
						g.setColor(c);
						g.fillOval(235, 135, 30, 30);
						winningCondition(2, 1);
					} else if(center == 3) {
						g.fillOval(325, 125, 50, 50);
						g.setColor(c);
						g.fillOval(335, 135, 30, 30);
						winningCondition(3, 1);
					} else if(center == 4) {
						g.fillOval(125, 225, 50, 50);
						g.setColor(c);
						g.fillOval(135, 235, 30, 30);
						winningCondition(4, 1);
					} else if(center == 5) {
						g.fillOval(225, 225, 50, 50);
						g.setColor(c);
						g.fillOval(235, 235, 30, 30);
						winningCondition(5, 1);
					} else if(center == 6) {
						g.fillOval(325, 225, 50, 50);
						g.setColor(c);
						g.fillOval(335, 235, 30, 30);
						winningCondition(6, 1);
					} else if(center == 7) {
						g.fillOval(125, 325, 50, 50);
						g.setColor(c);
						g.fillOval(135, 335, 30, 30);
						winningCondition(7, 1);
					} else if(center == 8) {
						g.fillOval(225, 325, 50, 50);
						g.setColor(c);
						g.fillOval(235, 335, 30, 30);
						winningCondition(8, 1);
					} else if(center == 9) {
						g.fillOval(325, 325, 50, 50);
						g.setColor(c);
						g.fillOval(335, 335, 30, 30);
						winningCondition(9, 1);
					}	
				} else if(player == 2) {
					g.setColor(a);
					if(center == 1) {
						g.fillPolygon(x(150, 120, 180), y(124, 176, 176), 3);
						g.setColor(c);
						g.fillPolygon(x(150, 132, 168), y(137, 168, 168), 3);
						winningCondition(1, 2);
					} else if(center == 2) {
						g.fillPolygon(x(250, 220, 280), y(124, 176, 176), 3);
						g.setColor(c);
						g.fillPolygon(x(250, 232, 268), y(137, 168, 168), 3);
						winningCondition(2, 2);
					} else if(center == 3) {
						g.fillPolygon(x(350, 320, 380), y(124, 176, 176), 3);
						g.setColor(c);
						g.fillPolygon(x(350, 332, 368), y(137, 168, 168), 3);
						winningCondition(3, 2);
					} else if(center == 4) {
						g.fillPolygon(x(150, 120, 180), y(224, 276, 276), 3);
						g.setColor(c);
						g.fillPolygon(x(150, 132, 168), y(237, 268, 268), 3);
						winningCondition(4, 2);
					} else if(center == 5) {
						g.fillPolygon(x(250, 220, 280), y(224, 276, 276), 3);
						g.setColor(c);
						g.fillPolygon(x(250, 232, 268), y(237, 268, 268), 3);
						winningCondition(5, 2);
					} else if(center == 6) {
						g.fillPolygon(x(350, 320, 380), y(224, 276, 276), 3);
						g.setColor(c);
						g.fillPolygon(x(350, 332, 368), y(237, 268, 268), 3);
						winningCondition(6, 2);
					} else if(center == 7) {
						g.fillPolygon(x(150, 120, 180), y(324, 376, 376), 3);
						g.setColor(c);
						g.fillPolygon(x(150, 132, 168), y(337, 368, 368), 3);
						winningCondition(7, 2);
					} else if(center == 8) {
						g.fillPolygon(x(250, 220, 280), y(324, 376, 376), 3);
						g.setColor(c);
						g.fillPolygon(x(250, 232, 268), y(337, 368, 368), 3);
						winningCondition(8, 2);
					} else if(center == 9) {
						g.fillPolygon(x(350, 320, 380), y(324, 376, 376), 3);
						g.setColor(c);
						g.fillPolygon(x(350, 332, 368), y(337, 368, 368), 3);
						winningCondition(9, 2);
					}
				}
			}
		}
	}
	
	public static int[] x(int value1, int value2, int value3) {
		int[] result = {value1, value2, value3};
		return result;
	}
	
	public static int[] y(int value1, int value2, int value3) {
		int[] result = {value1, value2, value3};
		return result;
	}
	
	private static void checkWinner(ArrayList<Integer> p) {
		Color a = new Color(255, 0, 0);
		g.setColor(a);
		if(p == P1) {
			g.drawString("You Won!", 190, 50);
			finalResult = "O";
		} else {
			g.drawString("Computer Won!", 150, 50);
			finalResult = "°˜";
		}
	}
}
